{"version":3,"sources":["Game.js"],"names":["Constants","require","GAME_STATE","STAND","CHESS_TYPE","cc","Class","extends","Component","properties","gameState","default","PREPARE","type","turn","BLACK","blackScoreLabel","Label","whiteScoreLabel","infoPanel","Node","infoLabel","onLoad","G","gameManager","infoAnimation","getComponent","Animation","startGame","PLAYING","showInfo","changeTurn","stand","string","WHITE","play"],"mappings":";;;;;;AACA,IAAMA,YAAYC,QAAQ,WAAR,CAAlB;AACA,IAAMC,aAAaF,UAAUE,UAA7B;AACA,IAAMC,QAAQH,UAAUG,KAAxB;AACA,IAAMC,aAAaJ,UAAUI,UAA7B;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,mBAAW;AACPC,qBAAST,WAAWU,OADb;AAEPC,kBAAMX;AAFC,SADH;AAKRY,cAAM;AACFH,qBAASR,MAAMY,KADb;AAEFF,kBAAMV;AAFJ,SALE;AASRa,yBAAiBX,GAAGY,KATZ;AAURC,yBAAiBb,GAAGY,KAVZ;AAWRE,mBAAWd,GAAGe,IAXN;AAYRC,mBAAWhB,GAAGY;AAZN,KAHP;;AAkBL;;AAEAK,UApBK,oBAoBK;AACNC,UAAEC,WAAF,GAAgB,IAAhB;AACA,aAAKC,aAAL,GAAqB,KAAKN,SAAL,CAAeO,YAAf,CAA4BrB,GAAGsB,SAA/B,CAArB;AACH,KAvBI;;;AAyBL;;AAEA;;AAEA;AACAC,aA9BK,uBA8BO;AACR,aAAKlB,SAAL,GAAiBR,WAAW2B,OAA5B;AACA,aAAKf,IAAL,GAAYX,MAAMY,KAAlB;AACA,aAAKe,QAAL,CAAc,OAAd;AACH,KAlCI;;;AAoCL;AACAC,cArCK,wBAqCQ;AACT,aAAKjB,IAAL,GAAY,CAAC,KAAKA,IAAlB;AACH,KAvCI;;;AAyCL;AACAgB,YA1CK,oBA0CIjB,IA1CJ,EA0CU;AACX,gBAAQA,IAAR;AACI,iBAAK,OAAL;AACI,oBAAKU,EAAES,KAAF,KAAY7B,MAAMY,KAAvB,EAA+B;AAC3B,yBAAKM,SAAL,CAAeY,MAAf,GAAwB,cAAxB;AACH,iBAFD,MAEO,IAAIV,EAAES,KAAF,KAAY7B,MAAM+B,KAAtB,EAA6B;AAChC,yBAAKb,SAAL,CAAeY,MAAf,GAAwB,cAAxB;AACH;AACD;;AAEJ;AACI;AAVR;AAYA,aAAKR,aAAL,CAAmBU,IAAnB;AACH;;AAED;;AA1DK,CAAT","file":"Game.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\manager","sourcesContent":["\r\nconst Constants = require('Constants');\r\nconst GAME_STATE = Constants.GAME_STATE;\r\nconst STAND = Constants.STAND;\r\nconst CHESS_TYPE = Constants.CHESS_TYPE;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        gameState: {\r\n            default: GAME_STATE.PREPARE,\r\n            type: GAME_STATE\r\n        },\r\n        turn: {\r\n            default: STAND.BLACK,\r\n            type: STAND\r\n        },\r\n        blackScoreLabel: cc.Label,\r\n        whiteScoreLabel: cc.Label,\r\n        infoPanel: cc.Node,\r\n        infoLabel: cc.Label\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        G.gameManager = this;\r\n        this.infoAnimation = this.infoPanel.getComponent(cc.Animation);\r\n    },\r\n\r\n    // start () {\r\n\r\n    // },\r\n\r\n    // 开始游戏\r\n    startGame() {\r\n        this.gameState = GAME_STATE.PLAYING;\r\n        this.turn = STAND.BLACK;\r\n        this.showInfo('start');\r\n    },\r\n\r\n    // 更换对手\r\n    changeTurn() {\r\n        this.turn = -this.turn;\r\n    },\r\n\r\n    // 消息提示\r\n    showInfo(type) {\r\n        switch (type) {\r\n            case 'start':\r\n                if ( G.stand === STAND.BLACK ) {\r\n                    this.infoLabel.string = '你是蓝色方\\n执黑棋先手';\r\n                } else if( G.stand === STAND.WHITE ){\r\n                    this.infoLabel.string = '你是红色方\\n执白棋后手';                    \r\n                }\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        this.infoAnimation.play();\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n"]}